Imports System
Imports System.Net.Http
Imports System.Net.Http.Headers
Imports System.Text
Imports System.Threading.Tasks

Public Class ApiClient
    Private Shared ReadOnly client As New HttpClient()

    Public Function GetToken(url As String, credentials As String) As Task(Of String)
        Dim tcs As New TaskCompletionSource(Of String)()

        Dim content = New StringContent(credentials, Encoding.UTF8, "application/json")
        client.PostAsync(url, content).ContinueWith(Sub(responseTask)
                                                        If responseTask.IsFaulted Then
                                                            tcs.SetException(responseTask.Exception)
                                                        ElseIf responseTask.IsCanceled Then
                                                            tcs.SetCanceled()
                                                        Else
                                                            Dim response = responseTask.Result
                                                            If response.IsSuccessStatusCode Then
                                                                response.Content.ReadAsStringAsync().ContinueWith(Sub(readTask)
                                                                                                                      tcs.SetResult(readTask.Result)
                                                                                                                  End Sub)
                                                            Else
                                                                response.Content.ReadAsStringAsync().ContinueWith(Sub(readTask)
                                                                                                                      Dim errorMsg = "API request failed: " & response.ReasonPhrase & " - " & readTask.Result
                                                                                                                      tcs.SetException(New Exception(errorMsg))
                                                                                                                  End Sub)
                                                            End If
                                                        End If
                                                    End Sub)

        Return tcs.Task
    End Function

    Public Function CallApiPostMethod(url As String, token As String, bodyContent As String) As Task(Of String)
        Dim tcs As New TaskCompletionSource(Of String)()

        client.DefaultRequestHeaders.Authorization = New AuthenticationHeaderValue("Bearer", token)

        Dim content = New StringContent(bodyContent, Encoding.UTF8, "application/json")
        client.PostAsync(url, content).ContinueWith(Sub(responseTask)
                                                        HandleResponse(responseTask, tcs)
                                                    End Sub)

        Return tcs.Task
    End Function

    Public Function CallApiGetMethod(url As String, token As String) As Task(Of String)
        Dim tcs As New TaskCompletionSource(Of String)()

        client.DefaultRequestHeaders.Authorization = New AuthenticationHeaderValue("Bearer", token)

        client.GetAsync(url).ContinueWith(Sub(responseTask)
                                            HandleResponse(responseTask, tcs)
                                        End Sub)

        Return tcs.Task
    End Function

    Private Sub HandleResponse(responseTask As Task(Of HttpResponseMessage), tcs As TaskCompletionSource(Of String))
        If responseTask.IsFaulted Then
            tcs.SetException(responseTask.Exception)
        ElseIf responseTask.IsCanceled Then
            tcs.SetCanceled()
        Else
            Dim response = responseTask.Result
            If response.IsSuccessStatusCode Then
                response.Content.ReadAsStringAsync().ContinueWith(Sub(readTask)
                                                                      tcs.SetResult(readTask.Result)
                                                                  End Sub)
            Else
                response.Content.ReadAsStringAsync().ContinueWith(Sub(readTask)
                                                                      Dim errorMsg = "API request failed: " & response.ReasonPhrase & " - " & readTask.Result
                                                                      tcs.SetException(New Exception(errorMsg))
                                                                  End Sub)
            End If
        End If
    End Sub
End Class



/*****/


Sub Main()
    Dim apiClient = New ApiClient()
    Dim tokenUrl As String = "https://example.com/api/token"
    Dim credentials As String = "{""username"": ""user"", ""password"": ""pass""}"
    Dim apiUrl As String = "https://example.com/api/resource"
    Dim bodyContent As String = "{""key"": ""value""}"

    ' Obtener el token
    apiClient.GetToken(tokenUrl, credentials).ContinueWith(Sub(tokenTask)
                                                               If tokenTask.IsCompleted AndAlso Not tokenTask.IsFaulted Then
                                                                   Dim token = tokenTask.Result
                                                                   Console.WriteLine("Token obtenido: " & token)

                                                                   ' Ejemplo de solicitud POST
                                                                   apiClient.CallApiPostMethod(apiUrl, token, bodyContent).ContinueWith(AddressOf OnApiMethodCalled)

                                                                   ' Ejemplo de solicitud GET
                                                                   apiClient.CallApiGetMethod(apiUrl, token).ContinueWith(AddressOf OnApiMethodCalled)
                                                               ElseIf tokenTask.IsFaulted Then
                                                                   Console.WriteLine("Error al obtener el token: " & tokenTask.Exception.InnerException.Message)
                                                               End If
                                                           End Sub)

    Console.ReadLine()
End Sub

Sub OnApiMethodCalled(responseTask As Task(Of String))
    If responseTask.IsCompleted AndAlso Not responseTask.IsFaulted Then
        Dim response = responseTask.Result
        Console.WriteLine(response)
    ElseIf responseTask.IsFaulted Then
        Console.WriteLine("API request failed: " & responseTask.Exception.InnerException.Message)
    Else
        Console.WriteLine("API request was canceled.")
    End If
End Sub
